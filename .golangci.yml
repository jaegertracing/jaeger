version: "2"
run:
  go: "1.23"
linters:
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - copyloopvar
    - decorder
    - depguard
    - durationcheck
    - errname
    - errorlint
    - gocritic
    - gosec
    - misspell
    - nakedret
    - nilerr
    - noctx
    - nolintlint
    - perfsprint
    - revive
    - testifylint
    - usestdlibvars
    - usetesting
  disable:
    - errcheck
    - staticcheck
  settings:
    depguard:
      rules:
        disallow-crossdock:
          files:
            - '!**/crossdock/**'
          deny:
            - pkg: github.com/crossdock/crossdock-go
              desc: Do not refer to crossdock from other packages
        disallow-otel-contrib-translator:
          files:
            - '!**/v1adapter/**'
          deny:
            - pkg: github.com/open-telemetry/opentelemetry-collector-contrib/pkg/translator/jaeger
              desc: Use v1adapter package instead of opentelemetry-collector-contrib/pkg/translator/jaeger
        disallow-uber/goleak:
          files:
            - '**_test.go'
          deny:
            - pkg: go.uber.org/goleak
              desc: Use github.com/jaegertracing/jaeger/internal/testutils
        disallowed-deps:
          deny:
            - pkg: go.uber.org/atomic
              desc: Use 'sync/atomic' instead of go.uber.org/atomic
            - pkg: io/ioutil
              desc: Use os or io instead of io/ioutil
            - pkg: github.com/hashicorp/go-multierror
              desc: Use errors.Join instead of github.com/hashicorp/go-multierror
            - pkg: go.uber.org/multierr
              desc: Use errors.Join instead of github.com/hashicorp/go-multierror
            - pkg: github.com/jaegertracing/jaeger/model$
              desc: Use github.com/jaegertracing/jaeger-idl/model/v1
            - pkg: github.com/jaegertracing/jaeger/internal/proto-gen/api_v2$
              desc: Use github.com/jaegertracing/jaeger-idl/proto-gen/api_v2
    gosec:
      excludes:
        - G104
        - G107
        - G404
        - G601
    govet:
      disable:
        - fieldalignment
        - shadow
      enable-all: true
    perfsprint:
      int-conversion: true
      err-error: true
      errorf: true
      sprintf1: true
      strconcat: true
    revive:
      severity: error
      enable-all-rules: true
      rules:
        # not a completely bad linter, but needs clean-up and sensible width (80 is too small)
        - name: line-length-limit
          arguments:
            - 80
          disabled: true
        # would be ok if we could exclude the test files, but otherwise too noisy
        - name: add-constant
          disabled: true
        # maybe enable in the future, needs more investigation
        - name: cognitive-complexity
          disabled: true
        # not sure how different from previous one
        - name: cyclomatic
          disabled: true
        # we use storage_v2, so...
        - name: var-naming
          disabled: true
        # could be useful to catch issues, but needs a clean-up and some ignores
        - name: unchecked-type-assertion
          disabled: true
        # wtf: "you have exceeded the maximum number of public struct declarations"
        - name: max-public-structs
          disabled: true
        # TBD - often triggered in tests
        - name: unhandled-error
          disabled: true
        # often looks like a red herring, needs investigation
        - name: flag-parameter
          disabled: true
        # looks like a good linter, needs cleanup
        - name: confusing-naming
          disabled: true
        # too pendantic
        - name: function-length
          disabled: true
        # definitely a good one, needs cleanup first
        - name: argument-limit
          disabled: true
        # maybe enable, needs invesitgation of the impact
        - name: import-alias-naming
          disabled: true
        # maybe enable, needs invesitgation of the impact
        - name: get-return
          disabled: true
        # investigate, could be real bugs. But didn't recent Go version changed loop variables semantics?
        - name: range-val-address
          disabled: true
        # this is idiocy, promotes less readable code. Don't enable.
        - name: var-declaration
          disabled: true
        # "no nested structs are allowed" - don't enable, doesn't make sense
        - name: nested-structs
          disabled: true
        # looks useful, but requires refactoring: "calls to log.Fatal only in main() or init() functions"
        - name: deep-exit
          disabled: true
        # this rule conflicts with nolintlint which does insist on no-space in //nolint
        - name: comment-spacings
          disabled: true
    testifylint:
      enable-all: true
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - bodyclose
          - gosec
          - noctx
        path: _test\.go
      - linters:
          - noctx
        path: crossdock
      - linters:
          - staticcheck
        path: internal/grpctest/
      - linters:
          - gocritic
        text: dupArg
      - linters:
          - gocritic
        text: exitAfterDefer
      - linters:
          - gocritic
        text: appendAssign
    paths:
      - .*.pb.go$
      - mocks
      - thrift-0.9.2
      - .*-gen
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gofmt
    - gofumpt
    - goimports
  settings:
    goimports:
      local-prefixes:
        - github.com/jaegertracing/jaeger
  exclusions:
    generated: lax
    paths:
      - .*.pb.go$
      - mocks
      - thrift-0.9.2
      - .*-gen
