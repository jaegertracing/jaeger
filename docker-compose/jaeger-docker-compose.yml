services:
    hotrod:
      image: cr.jaegertracing.io/jaegertracing/example-hotrod:latest
      ports:
        - '8080:8080'
        - '8083:8083'
      command: ["all"]
      environment:
        - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-collector:4318
      depends_on:
        - jaeger-collector
      networks:
        - jaeger-network

    jaeger-collector:
      image: cr.jaegertracing.io/jaegertracing/jaeger-collector
      command:
        - "--cassandra.keyspace=jaeger_v1_dc1"
        - "--cassandra.servers=cassandra"
        - "--collector.zipkin.host-port=9411"
        - "--collector.otlp.enabled=true"
        - "--sampling.initial-sampling-probability=.5"
        - "--sampling.target-samples-per-second=1.0"
      environment:
        - SAMPLING_CONFIG_TYPE=adaptive
      ports:
        - "14269:14269"
        - "14268:14268"
        - "14250"
        - "9411:9411"
        - "4317"
        - "4318"
      restart: on-failure
      depends_on:
        cassandra-schema:
          condition: service_started
      networks:
        - jaeger-network

    jaeger-query:
      image: cr.jaegertracing.io/jaegertracing/jaeger-query
      command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
      ports:
        - "16686:16686"
        - "16687"
      restart: on-failure
      depends_on:
        cassandra-schema:
          condition: service_started
      networks:
        - jaeger-network

    cassandra:
      image: cassandra:4.0
      networks:
        - jaeger-network
      healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
        interval: 10s
        timeout: 5s
        retries: 10

    cassandra-schema:
      image: cr.jaegertracing.io/jaegertracing/jaeger-cassandra-schema
      depends_on:
        cassandra:
          condition: service_healthy
      networks:
        - jaeger-network

networks:
  jaeger-network:
    driver: bridge