name: Metrics Comparison and Post Comment
on:
  workflow_run:
    workflows: ["E2E Tests"]
    types: [completed]
permissions:
  contents: read
  pull-requests: write
jobs:
  metrics-comparison:
    name: Compare Metrics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Install adm-zip
        run: npm install adm-zip

      - name: Download all metrics artifacts from triggering workflow
        id: download-artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const workflowRunId = context.payload.workflow_run.id;
            
            console.log(`Starting artifact download for workflow run ${workflowRunId} in ${owner}/${repo}`);
            
            // List all artifacts from the triggering workflow run
            console.log('Fetching artifacts list...');
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner,
              repo,
              run_id: workflowRunId,
            });
            console.log(`Found ${artifacts.data.artifacts.length} artifacts`);
            
            // Download and extract each artifact
            const fs = require('fs');
            const path = require('path');
            const AdmZip = require('adm-zip');
            
            for (const artifact of artifacts.data.artifacts) {
              console.log(`Processing artifact: ${artifact.name} (ID: ${artifact.id})`);
              const download = await github.rest.actions.downloadArtifact({
                owner,
                repo,
                artifact_id: artifact.id,
                archive_format: 'zip',
              });
            
              const extractPath = path.join(process.env.GITHUB_WORKSPACE, '.metrics', artifact.name);
              console.log(`Extracting to ${extractPath}`);
              const zip = new AdmZip(Buffer.from(download.data));
              zip.extractAllTo(extractPath, true);
              console.log(`Successfully extracted ${artifact.name}`);
            }
            
            // Extract PR number with detailed logging
            console.log('\nStarting PR number detection...');
            let prNumber = null;
            const headBranch = context.payload.workflow_run.head_branch;
            const headRepo = context.payload.workflow_run.head_repository.full_name;
            const headSha = context.payload.workflow_run.head_sha;
            
            console.log(`Workflow run details:
            - Head branch: ${headBranch}
            - Head repository: ${headRepo}
            - Commit SHA: ${headSha}`);
            
            // First try: Find PR by branch
            console.log(`\nAttempt 1: Searching PRs for branch ${headRepo}:${headBranch}`);
            const pullRequest = await github.rest.pulls.list({
              owner,
              repo,
              head: `${headRepo}:${headBranch}`,
            });
            
            if (pullRequest.data.length > 0) {
              prNumber = pullRequest.data[0].number;
              console.log(`Found PR via branch search: #${prNumber}`);
            } else {
              console.log('No PR found via branch search. Trying commit SHA...');
            
              // Second try: Find PR by commit SHA
              console.log(`\nAttempt 2: Searching PRs for commit ${headSha}`);
              const prsForCommit = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner,
                repo,
                commit_sha: headSha,
              });
            
              if (prsForCommit.data.length > 0) {
                prNumber = prsForCommit.data[0].number;
                console.log(`Found PR via commit SHA: #${prNumber}`);
              }
            }
            
            if (prNumber) {
              console.log(`\nFinal PR Number: ${prNumber}`);
              core.setOutput('pr_number', prNumber);
            } else {
              console.error('\nPR detection failed. Possible reasons:');
              console.error('- The workflow was triggered directly (not from a PR)');
              console.error('- The branch is not associated with any open PR');
              console.error('- The PR comes from a fork with restricted permissions');
              console.error(`Full workflow run context: ${JSON.stringify(context.payload.workflow_run, null, 2)}`);
              core.setFailed('Could not determine PR number for commenting.');
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        if: success() && steps.download-artifacts.outputs.pr_number
        run: |
          python3 -m pip install prometheus-client
          npm install @actions/core @actions/github
      - name: Compare metrics and generate summary
        if: success() && steps.download-artifacts.outputs.pr_number
        id: compare-metrics
        shell: bash
        run: |
          bash ./scripts/e2e/metrics_summary.sh
        env:
          LINK_TO_ARTIFACT: "https://github.com/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}"

      - name: Post PR comment with combined metrics summary
        if: steps.compare-metrics.outputs.DIFF_FOUND == 'true' && steps.download-artifacts.outputs.pr_number
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: ./.metrics/combined_summary.md
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          comment-tag: "## Metrics Comparison Summary"
          pr-number: ${{ steps.download-artifacts.outputs.pr_number }}
