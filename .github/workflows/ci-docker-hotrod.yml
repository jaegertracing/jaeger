name: CIT Hotrod

on:
  merge_group:
  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ (github.event.pull_request && github.event.pull_request.number) || github.ref || github.run_id }}
  cancel-in-progress: true

# See https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions
permissions:
  contents: read

jobs:
  hotrod:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runtime: [docker, k8s]
        jaeger-version: [v1, v2]
          
    steps:
    - uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: 1.24.x

    - uses: ./.github/actions/setup-node.js

    - uses: ./.github/actions/setup-branch

    - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Define BUILD_FLAGS var if running on a Pull Request
      run: |
        case ${GITHUB_EVENT_NAME} in
          pull_request)
            echo "BUILD_FLAGS=-l -p linux/amd64" >> ${GITHUB_ENV}
            ;;
          *)
            echo "BUILD_FLAGS=" >> ${GITHUB_ENV}
            ;;
        esac
    - name: Install kubectl
      if: matrix.runtime == 'k8s'
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'
  
    - name: Install Kustomize
      if: matrix.runtime == 'k8s'
      uses: imranismail/setup-kustomize@v2

    - name: Create k8s Kind Cluster
      if: matrix.runtime == 'k8s'
      uses: helm/kind-action@v1

    - name: Build, test, and publish hotrod image
      run:  bash scripts/build/build-hotrod-image.sh ${{ env.BUILD_FLAGS }} -v ${{ matrix.jaeger-version }} -r ${{ matrix.runtime }}
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
