// Copyright (c) The Jaeger Authors.
// SPDX-License-Identifier: Apache-2.0
//
// Run 'make generate-mocks' to regenerate.

// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	storage "github.com/jaegertracing/jaeger/internal/storage/v1"
	mock "github.com/stretchr/testify/mock"
)

// Inheritable is an autogenerated mock type for the Inheritable type
type Inheritable struct {
	mock.Mock
}

// InheritSettingsFrom provides a mock function with given fields: other
func (_m *Inheritable) InheritSettingsFrom(other storage.Factory) {
	_m.Called(other)
}

// NewInheritable creates a new instance of Inheritable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInheritable(t interface {
	mock.TestingT
	Cleanup(func())
}) *Inheritable {
	mock := &Inheritable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
