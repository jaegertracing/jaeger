// Copyright (c) The Jaeger Authors.
// SPDX-License-Identifier: Apache-2.0
//
// Run 'make generate-mocks' to regenerate.

// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	dbmodel "github.com/jaegertracing/jaeger/internal/storage/v1/elasticsearch/spanstore/internal/dbmodel"
	config "github.com/jaegertracing/jaeger/pkg/es/config"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// CoreSpanWriter is an autogenerated mock type for the CoreSpanWriter type
type CoreSpanWriter struct {
	mock.Mock
}

// Close provides a mock function with no fields
func (_m *CoreSpanWriter) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateTemplates provides a mock function with given fields: spanTemplate, serviceTemplate, indexPrefix
func (_m *CoreSpanWriter) CreateTemplates(spanTemplate string, serviceTemplate string, indexPrefix config.IndexPrefix) error {
	ret := _m.Called(spanTemplate, serviceTemplate, indexPrefix)

	if len(ret) == 0 {
		panic("no return value specified for CreateTemplates")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, config.IndexPrefix) error); ok {
		r0 = rf(spanTemplate, serviceTemplate, indexPrefix)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteSpan provides a mock function with given fields: spanStartTime, span
func (_m *CoreSpanWriter) WriteSpan(spanStartTime time.Time, span *dbmodel.Span) {
	_m.Called(spanStartTime, span)
}

// NewCoreSpanWriter creates a new instance of CoreSpanWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCoreSpanWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *CoreSpanWriter {
	mock := &CoreSpanWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
