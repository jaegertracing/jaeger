// Copyright (c) The Jaeger Authors.
// SPDX-License-Identifier: Apache-2.0
//
// Run 'make generate-mocks' to regenerate.

// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	storage_v1 "github.com/jaegertracing/jaeger/internal/proto-gen/storage_v1"
	mock "github.com/stretchr/testify/mock"
)

// StreamingSpanWriterPluginServer is an autogenerated mock type for the StreamingSpanWriterPluginServer type
type StreamingSpanWriterPluginServer struct {
	mock.Mock
}

type StreamingSpanWriterPluginServer_Expecter struct {
	mock *mock.Mock
}

func (_m *StreamingSpanWriterPluginServer) EXPECT() *StreamingSpanWriterPluginServer_Expecter {
	return &StreamingSpanWriterPluginServer_Expecter{mock: &_m.Mock}
}

// WriteSpanStream provides a mock function with given fields: _a0
func (_m *StreamingSpanWriterPluginServer) WriteSpanStream(_a0 storage_v1.StreamingSpanWriterPlugin_WriteSpanStreamServer) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for WriteSpanStream")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(storage_v1.StreamingSpanWriterPlugin_WriteSpanStreamServer) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StreamingSpanWriterPluginServer_WriteSpanStream_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteSpanStream'
type StreamingSpanWriterPluginServer_WriteSpanStream_Call struct {
	*mock.Call
}

// WriteSpanStream is a helper method to define mock.On call
//   - _a0 storage_v1.StreamingSpanWriterPlugin_WriteSpanStreamServer
func (_e *StreamingSpanWriterPluginServer_Expecter) WriteSpanStream(_a0 interface{}) *StreamingSpanWriterPluginServer_WriteSpanStream_Call {
	return &StreamingSpanWriterPluginServer_WriteSpanStream_Call{Call: _e.mock.On("WriteSpanStream", _a0)}
}

func (_c *StreamingSpanWriterPluginServer_WriteSpanStream_Call) Run(run func(_a0 storage_v1.StreamingSpanWriterPlugin_WriteSpanStreamServer)) *StreamingSpanWriterPluginServer_WriteSpanStream_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(storage_v1.StreamingSpanWriterPlugin_WriteSpanStreamServer))
	})
	return _c
}

func (_c *StreamingSpanWriterPluginServer_WriteSpanStream_Call) Return(_a0 error) *StreamingSpanWriterPluginServer_WriteSpanStream_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *StreamingSpanWriterPluginServer_WriteSpanStream_Call) RunAndReturn(run func(storage_v1.StreamingSpanWriterPlugin_WriteSpanStreamServer) error) *StreamingSpanWriterPluginServer_WriteSpanStream_Call {
	_c.Call.Return(run)
	return _c
}

// NewStreamingSpanWriterPluginServer creates a new instance of StreamingSpanWriterPluginServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStreamingSpanWriterPluginServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *StreamingSpanWriterPluginServer {
	mock := &StreamingSpanWriterPluginServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
